{"ast":null,"code":"var _jsxFileName = \"/Users/alex/personal_projects/ChatRoom/chatclient/livegab/react/src/Components/ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport MemberList from './MemberList';\nimport ChatContent from './ChatContent';\nimport MessageInput from './MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  tab,\n  userData,\n  publicChats,\n  privateChats,\n  handleValue,\n  sendPublicMessage,\n  sendPrivateMessage,\n  setTab\n}) => {\n  _s();\n  const chatContentRef = useRef(null);\n  useEffect(() => {\n    // Check if the user has scrolled to the bottom of the chat content\n    const chatContentDiv = chatContentRef.current;\n    if (chatContentDiv) {\n      const isAtBottom = chatContentDiv.scrollHeight - chatContentDiv.clientHeight <= chatContentDiv.scrollTop + 1;\n\n      // Only scroll to the bottom if the user is already at the bottom\n      if (isAtBottom) {\n        chatContentDiv.scrollTop = chatContentDiv.scrollHeight;\n      }\n    }\n  }, [publicChats, privateChats]); // You can add more dependencies if needed\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chatbox h-screen flex flex-col-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SideBar w-full max-w-[20%] bg-[#282b30] border-[#ffffff29] text-white shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(MemberList, {\n        tab: tab,\n        privateChats: privateChats,\n        setTab: setTab,\n        userData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-[90%] overflow-y-auto\",\n      ref: chatContentRef,\n      children: /*#__PURE__*/_jsxDEV(ChatContent, {\n        tab: tab,\n        userData: userData,\n        publicChats: publicChats,\n        privateChats: privateChats,\n        handleValue: handleValue,\n        sendPublicMessage: sendPublicMessage,\n        sendPrivateMessage: sendPrivateMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageSender mb-4 mx-auto pr-4 h-[8%] w-[79%] fixed bottom-0 right-0\",\n      children: /*#__PURE__*/_jsxDEV(MessageInput, {\n        tab: tab,\n        userData: userData,\n        publicChats: publicChats,\n        privateChats: privateChats,\n        handleValue: handleValue,\n        sendPublicMessage: sendPublicMessage,\n        sendPrivateMessage: sendPrivateMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"mOv7bv2kefqXgZgTFrd064YEgxs=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","MemberList","ChatContent","MessageInput","jsxDEV","_jsxDEV","ChatBox","tab","userData","publicChats","privateChats","handleValue","sendPublicMessage","sendPrivateMessage","setTab","_s","chatContentRef","chatContentDiv","current","isAtBottom","scrollHeight","clientHeight","scrollTop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/alex/personal_projects/ChatRoom/chatclient/livegab/react/src/Components/ChatBox.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport MemberList from './MemberList';\nimport ChatContent from './ChatContent';\nimport MessageInput from './MessageInput';\n\nconst ChatBox = ({\n  tab,\n  userData,\n  publicChats,\n  privateChats,\n  handleValue,\n  sendPublicMessage,\n  sendPrivateMessage,\n  setTab,\n}) => {\n  const chatContentRef = useRef(null);\n\n  useEffect(() => {\n    // Check if the user has scrolled to the bottom of the chat content\n    const chatContentDiv = chatContentRef.current;\n    if (chatContentDiv) {\n      const isAtBottom = chatContentDiv.scrollHeight - chatContentDiv.clientHeight <= chatContentDiv.scrollTop + 1;\n\n      // Only scroll to the bottom if the user is already at the bottom\n      if (isAtBottom) {\n        chatContentDiv.scrollTop = chatContentDiv.scrollHeight;\n      }\n    }\n  }, [publicChats, privateChats]); // You can add more dependencies if needed\n\n  return (\n    <div className=\"Chatbox h-screen flex flex-col-1\">\n      <div className=\"SideBar w-full max-w-[20%] bg-[#282b30] border-[#ffffff29] text-white shadow-lg\">\n        <MemberList tab={tab} privateChats={privateChats} setTab={setTab} userData={userData} />\n      </div>\n      <div className='h-[90%] overflow-y-auto' ref={chatContentRef}>\n        <ChatContent \n          tab={tab}\n          userData={userData}\n          publicChats={publicChats}\n          privateChats={privateChats}\n          handleValue={handleValue}\n          sendPublicMessage={sendPublicMessage}\n          sendPrivateMessage={sendPrivateMessage}\n        />\n      </div>\n      <div className=\"messageSender mb-4 mx-auto pr-4 h-[8%] w-[79%] fixed bottom-0 right-0\">\n        <MessageInput\n          tab={tab}\n          userData={userData}\n          publicChats={publicChats}\n          privateChats={privateChats}\n          handleValue={handleValue}\n          sendPublicMessage={sendPublicMessage}\n          sendPrivateMessage={sendPrivateMessage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAGA,CAAC;EACfC,GAAG;EACHC,QAAQ;EACRC,WAAW;EACXC,YAAY;EACZC,WAAW;EACXC,iBAAiB;EACjBC,kBAAkB;EAClBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,cAAc,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,cAAc,GAAGD,cAAc,CAACE,OAAO;IAC7C,IAAID,cAAc,EAAE;MAClB,MAAME,UAAU,GAAGF,cAAc,CAACG,YAAY,GAAGH,cAAc,CAACI,YAAY,IAAIJ,cAAc,CAACK,SAAS,GAAG,CAAC;;MAE5G;MACA,IAAIH,UAAU,EAAE;QACdF,cAAc,CAACK,SAAS,GAAGL,cAAc,CAACG,YAAY;MACxD;IACF;EACF,CAAC,EAAE,CAACX,WAAW,EAAEC,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEjC,oBACEL,OAAA;IAAKkB,SAAS,EAAC,kCAAkC;IAAAC,QAAA,gBAC/CnB,OAAA;MAAKkB,SAAS,EAAC,iFAAiF;MAAAC,QAAA,eAC9FnB,OAAA,CAACJ,UAAU;QAACM,GAAG,EAAEA,GAAI;QAACG,YAAY,EAAEA,YAAa;QAACI,MAAM,EAAEA,MAAO;QAACN,QAAQ,EAAEA;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC,eACNvB,OAAA;MAAKkB,SAAS,EAAC,yBAAyB;MAACM,GAAG,EAAEb,cAAe;MAAAQ,QAAA,eAC3DnB,OAAA,CAACH,WAAW;QACVK,GAAG,EAAEA,GAAI;QACTC,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA,WAAY;QACzBC,YAAY,EAAEA,YAAa;QAC3BC,WAAW,EAAEA,WAAY;QACzBC,iBAAiB,EAAEA,iBAAkB;QACrCC,kBAAkB,EAAEA;MAAmB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvB,OAAA;MAAKkB,SAAS,EAAC,uEAAuE;MAAAC,QAAA,eACpFnB,OAAA,CAACF,YAAY;QACXI,GAAG,EAAEA,GAAI;QACTC,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA,WAAY;QACzBC,YAAY,EAAEA,YAAa;QAC3BC,WAAW,EAAEA,WAAY;QACzBC,iBAAiB,EAAEA,iBAAkB;QACrCC,kBAAkB,EAAEA;MAAmB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CAtDIT,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAwDb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}